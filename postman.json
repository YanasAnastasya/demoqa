{
	"info": {
		"_postman_id": "4b0f881b-5231-4df6-91c8-af21da05501d",
		"name": "/",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16521680"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.eql(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_b = pm.response.json();\r",
							"var req = request.data\r",
							"var req_salary = +req.salary\r",
							"var req_name = req.name\r",
							"var req_age = req.age\r",
							"var req_family = req.family\r",
							"var req_salary_1_5 = req_salary*4\r",
							"\r",
							"\r",
							"console.log(\"req_name = \" + typeof req_name)\r",
							"console.log(\"resp_name = \" + typeof resp_b.name)\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var resp_b = pm.response.json();\r",
							"    pm.expect(resp_b.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    var a = pm.response.json();\r",
							"    pm.expect(a.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_b.age).to.eql(\"30\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    var sal = pm.response.json();\r",
							"    pm.expect(sal.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(resp_b.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"console.log(resp_b.family)\r",
							"\r",
							"pm.test(\"Your test salary_1_5\", function () {\r",
							"    pm.expect(req.family.u_salary_1_5_year).to.eql(req_salary_1_5);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nasty",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_b = pm.response.json();\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_b.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_b.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(resp_b.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"console.log(resp_b.family);\r",
							"\r",
							"pm.test(\"Check_dog_name\", function () {\r",
							"    pm.expect(resp_b.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_dog_age\", function () {\r",
							"    pm.expect(resp_b.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_dog_Luky\", function () {\r",
							"    pm.expect(resp_b.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_dog_Luky\", function () {\r",
							"    pm.expect(resp_b.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Nasty&age=30&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Nasty"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info-4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_b = pm.response.json();\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_b.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_b.age).to.eql(+reqData.age);\r",
							"});\r",
							"\r",
							"console.log(reqData.salary)\r",
							"\r",
							"console.log(resp_b.salary)\r",
							"\r",
							"console.log(resp_b.salary[0])\r",
							"\r",
							"console.log(resp_b.salary[1])\r",
							"\r",
							"console.log(resp_b.salary[2])\r",
							"\r",
							"pm.test(\"salary[0]\", function () {\r",
							"    pm.expect(resp_b.salary[0]).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"salary[1]\", function () {\r",
							"    pm.expect(resp_b.salary[1]).to.eql(String(reqData.salary*2));\r",
							"});\r",
							"\r",
							"pm.test(\"salary[2]\", function () {\r",
							"    pm.expect(resp_b.salary[2]).to.eql(String(reqData.salary*3));\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"\r",
							"pm.environment.set(\"age\");\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"\r",
							"pm.environment.set(\"salary\");\r",
							"\r",
							"pm.environment.set(\"name\", reqData.name);\r",
							"\r",
							"pm.environment.set(\"age\", reqData.age);\r",
							"\r",
							"pm.environment.set(\"salary\", reqData.salary);\r",
							"\r",
							"for (i of resp_b.salary) {\r",
							"    console.log(i)\r",
							"}\r",
							"for (i = 0; i < resp_b.salary.lengh; i++){\r",
							"    console.log(resp_b.salary[i])\r",
							"}\r",
							"\r",
							"for (item in resp_b.salary){\r",
							"    console.log(resp_b.salary[item])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Nasty&age=30&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Nasty"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_b = pm.response.json();\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp_b).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"for (i in resp_b.person) {\r",
							"console.log (i)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Nasty",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}